name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache Cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose
  build-wasm:
      runs-on: ubuntu-latest
      env:
        USE_WASM_PACK: "true"
        WASM_PACK_TARGET: "bundler"
        PROFILE: "release"
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
  
        - name: Cache cargo registry, git and target
          uses: actions/cache@v4
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
              target
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            restore-keys: |
              ${{ runner.os }}-cargo-
  
        - name: Install Rust toolchain (stable)
          uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            profile: minimal
            check: true
  
        - name: Add wasm target
          run: rustup target add wasm32-unknown-unknown
  
        - name: Build (cargo â†’ wasm)
          if: env.USE_WASM_PACK == 'false'
          run: |
            cargo build --target wasm32-unknown-unknown --${{ env.PROFILE }}
            # result(s) will be in:
            # target/wasm32-unknown-unknown/${{ env.PROFILE }}/<your_crate>.wasm
  
        - name: Install wasm-pack
          if: env.USE_WASM_PACK == 'true'
          run: |
            # Installs the official wasm-pack binary
            curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
  
        - name: Build with wasm-pack
          if: env.USE_WASM_PACK == 'true'
          run: |
            # build for web, bundler (webpack/rollup) or nodejs
            wasm-pack build --${{ env.PROFILE }} --target ${{ env.WASM_PACK_TARGET }}
  
        - name: List build artifacts
          run: |
            echo "Artifacts under target:"
            ls -la target || true
            echo "Check pkg/ (wasm-pack output) if used:"
            ls -la pkg || true
  
        - name: Upload wasm artifact
          uses: actions/upload-artifact@v4
          with:
            name: wasm-output
            path: |
              target/wasm32-unknown-unknown/${{ env.PROFILE }}/*.wasm
              pkg || true
